- content_for :head do
  = auto_discovery_link_tag(:atom, {:action => 'major_actions', :format => :atom}, {:title => "Major Actions"})
  = auto_discovery_link_tag(:atom, {:format => :atom}, {:title => "All Actions"})

- title("#{@bill.state.name} #{@bill.chamber.name} Bill #{@bill.bill_number}")
- track(@bill)
-# #{@bill.to_hashtags}
:ruby
  javascript do
  (%Q|
  $(document).ready(function() {
    TwitterAPI.search("#dudeitstrue", function(json, status){
    	var content = "";
      var count = 0;
    	$.each(json['results'], function(i){
    	  count += 1;
    		tweet = "<span class=\\"from_user\\">" + this['from_user'] + "</span>";
    		tweet += "<span class=\\"text\\">" + this['text'] + "</span>";
    		tweet += "<time class=\\"timeago\\" datetime=\\"" + this['created_at'] + "\\" title=\\"" + this['created_at'] + "\\">" + jQuery.timeago(this['created_at']) + "</time>";
    		content += "<li class=\\"tweet\\">" + tweet + "</li>";
    	});
      if (count > 0) {
        $("#twitter").show();
    	  $("ul#tweets").html(content);
      }
    })
  });
  |)
  end

.grid_16

  %aside.take_action
    = render :partial => 'shared/share_tools', :locals => {:message => "Share", :title => (yield(:title) || "OpenGovernment"), :url => request.url}
    .hov.track_buttons
      %h4.button
        %span Track
        .arrow
      .drop.button
        %ul
          %li.rss 
            = link_to "All actions", {:actions => 'all', :format => :atom}
            = link_to "Major actions", {:actions => 'major', :format => :atom}
          %li.email Email Alerts

    .hov.write_buttons
      %h4.button
        %span Write
        .arrow
      .drop.button
        %ul
          %li.email Email
          %li.twitter Twitter
          %li.email Facebook

    .support_buttons
      %a.support.button
        %span I Support this Bill!
      %a.oppose.button
        %span I Oppose this Bill!
           


  %h1
    %span.state-and-chamber
      = "#{@bill.state.name} #{@bill.chamber.name} Bill "
    %span
      = "#{@bill.bill_number}"

%hr.grid_16


%nav.grid_4
  #left_nav
    = render_navigation(:level => 3)

.grid_12
  .grid_12.alpha
    = render :partial => 'shared/view_counts', :locals => {:page => @bill}

  %hr
  
  .grid_12.alpha
    %span.session Session: #{raw @bill.session.name_fm}
    %p.grid_12.alpha.summary= @bill.title

  %hr

  .grid_6.alpha
    %h2 Sponsors
    %ul.lined
      - @sponsors.each do |s|
        %li
          - surround '',',' do
            = s.sponsor_id? ? link_to(s.sponsor_name, person_path(s.sponsor)) : s.sponsor_name
          = s.kind_fm
  
  .grid_6.omega
    - if @bill.versions.count > 0
      %h2 Versions
  
      %ul.lined
        - @bill.versions.each do |version|
          %li
            = version.url.blank? ? version.name : link_to(version.name, version.url)

    - if @bill.documents.count > 0
      %h2 Documents

      %ul.lined
        - @bill.documents.each do |document|
          %li
            = document.url.blank? ? document.name : link_to(document.name, document.url)

  %hr.push_top

  - if @bill.major_actions.count > 0
    %h2 #{link_to "Major Actions", url_for(:actions => 'major'), :remote => true} | #{link_to "All Actions", url_for(:actions => 'all'), :remote => true}
    .grid_12.alpha
      #bill_actions= render :partial => 'actions_table', :locals => {:actions => @actions}

  %hr.push_top

  #twitter(style="display: none;")
    %h2 Tweets
    .grid_12.alpha
      %ul#tweets

  - if @bill.votes.count > 0
    %h2 Votes
    %table.vote-summary.grid_12.alpha

      %tbody
        - @bill.votes.each do |vote|
          %tr

            %td.vote_date= vote.date.to_html

            %td.vote-motion
              %h4= link_to("#{vote.motion}", vote_path(vote))
            %td.votes
              %span.total-votes.rounded= vote.total_count
              %span.small-label total votes
            %td.votes{:class => vote.passed? ? 'vote-passed' : ''}
              %span.vote-yes.rounded= vote.yes_count.round
              %span.small-label yes votes
            %td.votes{:class => vote.passed? ? '' : 'vote-failed'}
              %span.vote-no.rounded= vote.no_count.round
              %span.small-label no votes
            %td.votes
              %span.other-votes.rounded= vote.other_count.round
              %span.small-label other votes

            %td.vote-bar
              %span{:class => 'vote-yes-block', :style => "width: #{vote.yes_pct}%;"} &nbsp;
              %span{:class => 'vote-no-block', :style => "width: #{vote.no_pct}%;"} &nbsp;
              %span{:class => 'vote-other-block', :style => "width: #{vote.other_pct}%;"} &nbsp;
              %span{:class => 'vote-needed', :style => "width: #{vote.needed_to_pass_pct}%;"} &nbsp;

  %hr

  %b