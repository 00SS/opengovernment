!!! 5
%html
  %head
    %meta(charset="utf-8")

    %meta(name='apple-mobile-web-app-status-bar-style' content='black')
    %meta(name='apple-mobile-web-app-capable' content='yes')
    %link(rel='apple-touch-icon-precomposed' href='/images/home_screen.png')

    = csrf_meta_tag
    = include_stylesheets :common, :other
    :javascript
      var _sf_startpt=(new Date()).getTime()

    <!--[if lt IE 9]>
    %script(src='http://html5shiv.googlecode.com/svn/trunk/html5.js')
    <![endif]-->
    -# jQuery & jQuery UI via http://code.google.com/apis/libraries/devguide.html
    = javascript_include_tag "https://ajax.googleapis.com/ajax/libs/jquery/1.5.0/jquery.min.js"
    = javascript_include_tag "https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/jquery-ui.min.js"
    = include_javascripts :common

    -# JS dropdowns for state and session selection
    - dropdown('a#dropdown', '.state-select')
    - unless content_for?(:content) || @available_sessions.empty?
      - dropdown('a#session_dropdown', '.session-select')

    - if content_for? :js_hook
      %script(type='text/javascript' charset='UTF-8')
        = yield :js_hook

    = yield :head


    %title= t('site.name') + " - " + (content_for?(:title) ? yield(:title) : t('site.tagline'))

  %body{:class => page_class + (current_place_subdomain.blank? ? '' : ' ' + current_place_subdomain)}

    %div.container_16
      %div.skip-link.screen-reader-text
        %a(href="#content" title="Skip to content") Skip to content
      %header
        <a href="/pages/help" class="grow">Help Us Grow!</a>
        #account.grid_9.alpha
          .grid_9.alpha.omega
            %strong
              = link_to t('site.name'), home_url(:subdomain => false)  
 
            %ul.breadcrumb
              %li.topnav
                -#%a{:href => root_url(:subdomain => current_place_subdomain)}
                  -#= current_place_name || t('site.select_state')
                %a#dropdown{:class => 'dropdown', :href => '#'}
                  Select State

                .state-select
                  %span.triangle
                  %ul
                    - State.loadable.each do |state|
                      %li.state_name= link_to state.name, state_url(state)
            %span.beta Beta
            .hide
              - if current_user
                = succeed(',') do
                  = t('site.greeting')
                %a.account(href="#content" title="Username") #{current_user.login}.
                = link_to(t('site.sign_out'), destroy_user_session_path)
              - else
                = link_to(t('site.sign_in'), new_user_session_path, :class => 'modal')
              %a.help{:href => page_url('site-help'), :title => "Help Center"} Help
        - if current_place
          .grid_7.omega.search_form
            = render 'shared/search_form'
        - else
          .grid_4.push_3.omega.by
            %a.ppf{:href => 'http://participatorypolitics.org/'} by PPF
            %a.sunlight{:href => 'http://sunlightfoundation.com/'} and the Sunlight Foundation
              

    %div.container_16.main.boxxed
      
      - unless flash.empty?
        %div#flash
          - flash.each do |key, value|
            %div(id="flash_#{key}")
              =h value


      %h1 Titles should go here 


      - if content_for?(:content)
        -# :content can be yielded by nested templates eg. pages.html.haml
        = yield(:content)
      - else
        = yield :before_left_nav
        .grid_4.nav-cont
          - if !default_session?
            %p.prior_session #{current_session_name} session
          - else
            %p.current_session #{current_session_name} session
          - if @available_sessions.size > 1
            %a#session_dropdown{:class => 'dropdown', :href => '#'}
            .session-select
              %span.triangle
              %ul
                - @available_sessions.each do |session|
                  %li{:class => session.id == current_session.id ? 'active' : nil}= link_to session.name_fm, state_path(:session => session)
          %nav#left_nav
            = content_for?(:left_nav) ? yield(:left_nav) : (render_navigation(:level => 1..2) || raw('&nbsp;'))
          = yield :below_left_nav

      .grid_12.content
        = yield

        .clearfix

      %br

      .clearfix

    = render 'layouts/footer'
    .clearfix
    
    %script(type='text/javascript' charset='UTF-8')
      = yield :js_footer

    - if Rails.env == 'production'
      :javascript
        // Chartbeat
        var _sf_async_config={uid:8875,domain:"opengovernment.org"};
        (function(){
          function loadChartbeat() {
            window._sf_endpt=(new Date()).getTime();
            var e = document.createElement('script');
            e.setAttribute('language', 'javascript');
            e.setAttribute('type', 'text/javascript');
            e.setAttribute('src',
               (("https:" == document.location.protocol) ? "https://a248.e.akamai.net/chartbeat.download.akamai.com/102508/" : "http://static.chartbeat.com/") +
               "js/chartbeat.js");
            document.body.appendChild(e);
          }
          var oldonload = window.onload;
          window.onload = (typeof window.onload != 'function') ?
             loadChartbeat : function() { oldonload(); loadChartbeat(); };
        })();

        // Google analytics
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-1208819-4']);
        _gaq.push(['_setDomainName', '.opengovernment.org']);
        _gaq.push(['_trackPageview']);

        (function() {
          var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
          ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
          var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
