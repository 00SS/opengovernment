- title(t '.vote_on', :bill_number => @vote.bill.bill_number )
- dialog('#votes_needed_dialog', '#votes_needed_why')

%h1
  %span.state-and-chamber
    %strong 
      = t('.voteinthe')
      = @state.name 
      = @vote.chamber.name
      = (@vote.committee_name ? t('.committee_of_the', :name => @vote.committee_name) : '')
  %span
    = @vote.bill.bill_number
    &mdash;
    = t '.motion'
    = @vote.motion
%hr

.grid_1.alpha.details
  = @vote.date.try(:to_html)

.grid_11.summary.omega
  %strong
    = @vote.passed? ? t('.passed') : t('.failed')
  %p= @vote.bill.title

%hr

.grid_12.vote_chart.alpha.omega
  %h2 
    = t '.vote_breakdown'
  %table
    %tr
      %th.first.label(scope='row')= t '.yeslabel'
      %td.first.label!= @vote.passed? ? '&radic;' : ''
      %td.first.label= @vote.yes_count
      %td(rowspan=3 class="vote_chart")= vote_chart_image_tag(@vote)
    %tr
      %th.label(scope='row')= t '.nolabel'
      %td.label!= @vote.passed? ? '' : '&radic;'
      %td.label= @vote.no_count
    %tr
      %th.last.label(scope='row')= t '.otherlabel'
      %td.last.label
      %td.last.label #{@vote.other_count}
    %caption(align='bottom')
      = t '.not_always_accurate'
      = link_to(t('.why'), '#', :id => "votes_needed_why")

%hr

.grid_12.alpha.omega
  %h2
    = t '.geography_of_the_vote'
  %table.map_legend
    %tr
      %th(scope='col' colspan=2)= t 'states.blue_party_label'
      %th(scope='col' colspan=2)= t 'states.red_party_label'
      %th(scope='col' colspan=2)= t 'states.grey_party_label'
    %tr
      %td.icon= image_tag('votes/dem-yes-map.png')
      %td Yes
      %td.icon= image_tag('votes/rep-yes-map.png')
      %td Yes
      %td.icon= image_tag('votes/ind-yes-map.png')
      %td Yes
    %tr
      %td.icon= image_tag('votes/dem-no-map.png')
      %td No
      %td.icon= image_tag('votes/rep-no-map.png')
      %td No
      %td.icon= image_tag('votes/ind-no-map.png')
      %td No

  = vote_map_img(@state, @vote.id)

#votes_needed_dialog(title="Data Quality Caveat")
  = t '.rules_are_complex'

.grid_12.alpha
  %h2 
    = t '.full_role_call'
  - unless @vote.roll_calls.size > 0
    %p 
      = t '.no_roll_call'
  - else
    - @vote.roll_calls_by_vote_type.each do |vote_type, roll_calls|
      .grid_4.alpha
        %table.roll_call
          %caption(align='top') #{vote_type.capitalize} Votes
          %thead
            %tr
              %th= t '.name'
              %th= t '.district'
              %th= t '.party'
          %tbody
            - roll_calls.each do |roll_call|
              %tr
                %td.person(class="vote_#{roll_call.roles.first.try(:party_abbr)}_#{vote_type}")= link_to roll_call.person.full_name, person_path(roll_call.person)
                %td= roll_call.roles.first.try(:district_fm)
                %td= roll_call.roles.first.try(:party_fm)
